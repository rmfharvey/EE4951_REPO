/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : fsl_dspi1.h
**     Project     : sd_w_fatfs
**     Processor   : MK22FN512VLL12
**     Component   : fsl_dspi
**     Version     : Component 1.2.0, Driver 01.00, CPU db: 3.00.000
**     Repository  : KSDK 1.2.0
**     Compiler    : GNU C Compiler
**     Date/Time   : 2015-12-13, 17:54, # CodeGen: 1
**     Contents    :
**         DSPI_DRV_EdmaIRQHandler              - void DSPI_DRV_EdmaIRQHandler(uint32_t instance);
**         DSPI_DRV_EdmaMasterInit              - dspi_status_t DSPI_DRV_EdmaMasterInit(uint32_t...
**         DSPI_DRV_EdmaMasterDeinit            - dspi_status_t DSPI_DRV_EdmaMasterDeinit(uint32_t instance);
**         DSPI_DRV_EdmaMasterSetDelay          - dspi_status_t DSPI_DRV_EdmaMasterSetDelay(uint32_t instance,dspi_delay_type_t...
**         DSPI_DRV_EdmaMasterConfigureBus      - dspi_status_t DSPI_DRV_EdmaMasterConfigureBus(uint32_t instance,const...
**         DSPI_DRV_EdmaMasterTransferBlocking  - dspi_status_t DSPI_DRV_EdmaMasterTransferBlocking(uint32_t instance,const...
**         DSPI_DRV_EdmaMasterTransfer          - dspi_status_t DSPI_DRV_EdmaMasterTransfer(uint32_t instance,const...
**         DSPI_DRV_EdmaMasterGetTransferStatus - dspi_status_t DSPI_DRV_EdmaMasterGetTransferStatus(uint32_t instance,uint32_t...
**         DSPI_DRV_EdmaMasterAbortTransfer     - dspi_status_t DSPI_DRV_EdmaMasterAbortTransfer(uint32_t instance);
**         DSPI_DRV_EdmaMasterIRQHandler        - void DSPI_DRV_EdmaMasterIRQHandler(uint32_t instance);
**         DSPI_DRV_EdmaSlaveInit               - dspi_status_t DSPI_DRV_EdmaSlaveInit(uint32_t...
**         DSPI_DRV_EdmaSlaveDeinit             - dspi_status_t DSPI_DRV_EdmaSlaveDeinit(uint32_t instance);
**         DSPI_DRV_EdmaSlaveTransferBlocking   - dspi_status_t DSPI_DRV_EdmaSlaveTransferBlocking(uint32_t instance,const...
**         DSPI_DRV_EdmaSlaveTransfer           - dspi_status_t DSPI_DRV_EdmaSlaveTransfer(uint32_t instance,const uint8_t *...
**         DSPI_DRV_EdmaSlaveAbortTransfer      - dspi_status_t DSPI_DRV_EdmaSlaveAbortTransfer(uint32_t instance);
**         DSPI_DRV_EdmaSlaveGetTransferStatus  - dspi_status_t DSPI_DRV_EdmaSlaveGetTransferStatus(uint32_t instance,uint32_t...
**         DSPI_DRV_EdmaSlaveIRQHandler         - void DSPI_DRV_EdmaSlaveIRQHandler(uint32_t instance);
**
**     Copyright : 1997 - 2015 Freescale Semiconductor, Inc. 
**     All Rights Reserved.
**     
**     Redistribution and use in source and binary forms, with or without modification,
**     are permitted provided that the following conditions are met:
**     
**     o Redistributions of source code must retain the above copyright notice, this list
**       of conditions and the following disclaimer.
**     
**     o Redistributions in binary form must reproduce the above copyright notice, this
**       list of conditions and the following disclaimer in the documentation and/or
**       other materials provided with the distribution.
**     
**     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**       contributors may be used to endorse or promote products derived from this
**       software without specific prior written permission.
**     
**     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**     
**     http: www.freescale.com
**     mail: support@freescale.com
** ###################################################################*/
/*!
** @file fsl_dspi1.h
** @version 01.00
*/         
/*!
**  @addtogroup fsl_dspi1_module fsl_dspi1 module documentation
**  @{
*/         
#ifndef __fsl_dspi1_H
#define __fsl_dspi1_H
/* MODULE fsl_dspi1. */

/* Include inherited beans */
#include "clockMan1.h"
#include "dmaController1.h"
#include "osa1.h"
#include "Cpu.h"

/*! @brief Device instance number */
#define FSL_FSL_DSPI1 0
/*! @brief fsl_dspi1 component mode */
#define FSL_DSPI1_DMA_MODE 1U

/*! @brief Driver state structure. Generated due to enabled auto initialization */
extern dspi_edma_master_state_t fsl_dspi1_MasterState;
  
/*! @brief eDMA TCD structure for DMA transfers. Generated due to enabled auto initialization */
extern edma_software_tcd_t fsl_dspi1_dmaTcd __attribute__((aligned (32)));

/*! @brief Driver calculated baudrate is returned from DSPI_DRV_MasterInit() call.
    Generated due to enabled auto initialization */
extern uint32_t fsl_dspi1_calculatedBaudRate;
  
/*! @brief Master bus configuration declaration */
extern const dspi_edma_device_t fsl_dspi1_BusConfig0;
    
/*! @brief Master configuration declaration */
extern const dspi_edma_master_user_config_t fsl_dspi1_MasterConfig0;
    
/*! @brief Slave configuration declaration */
extern const dspi_edma_slave_user_config_t fsl_dspi1_SlaveConfig0;
    

#endif
/* ifndef __fsl_dspi1_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.5 [05.21]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
